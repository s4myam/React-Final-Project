{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\React Final Project\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Row, Col, Card, Button, ProgressBar, Alert } from 'react-bootstrap';\nimport { format } from 'date-fns';\nimport { setShowAddTransactionModal, setShowAddBudgetModal, setShowAddGoalModal } from '../store/slices/uiSlice';\nimport { loadTransactions } from '../store/slices/transactionsSlice';\nimport { loadBudgets } from '../store/slices/budgetsSlice';\nimport { loadGoals } from '../store/slices/goalsSlice';\nimport AddTransactionModal from './modals/AddTransactionModal';\nimport AddBudgetModal from './modals/AddBudgetModal';\nimport AddGoalModal from './modals/AddGoalModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    items: transactions\n  } = useSelector(state => state.transactions);\n  const {\n    items: budgets\n  } = useSelector(state => state.budgets);\n  const {\n    items: goals\n  } = useSelector(state => state.goals);\n  const {\n    showAddTransactionModal,\n    showAddBudgetModal,\n    showAddGoalModal\n  } = useSelector(state => state.ui);\n  const [monthlyStats, setMonthlyStats] = useState({\n    income: 0,\n    expenses: 0,\n    balance: 0\n  });\n  useEffect(() => {\n    // Load data if not already loaded\n    if (transactions.length === 0) dispatch(loadTransactions());\n    if (budgets.length === 0) dispatch(loadBudgets());\n    if (goals.length === 0) dispatch(loadGoals());\n  }, [dispatch, transactions.length, budgets.length, goals.length]);\n  useEffect(() => {\n    // Calculate monthly statistics\n    const currentMonth = new Date().getMonth();\n    const currentYear = new Date().getFullYear();\n    const monthlyTransactions = transactions.filter(transaction => {\n      const transactionDate = new Date(transaction.date);\n      return transactionDate.getMonth() === currentMonth && transactionDate.getFullYear() === currentYear;\n    });\n    const income = monthlyTransactions.filter(t => t.type === 'income').reduce((sum, t) => sum + parseFloat(t.amount), 0);\n    const expenses = monthlyTransactions.filter(t => t.type === 'expense').reduce((sum, t) => sum + parseFloat(t.amount), 0);\n    setMonthlyStats({\n      income,\n      expenses,\n      balance: income - expenses\n    });\n  }, [transactions]);\n  const getRecentTransactions = () => {\n    return transactions.sort((a, b) => new Date(b.date) - new Date(a.date)).slice(0, 5);\n  };\n  const getBudgetProgress = () => {\n    return budgets.map(budget => ({\n      ...budget,\n      percentage: Math.min(budget.spent / budget.limit * 100, 100),\n      remaining: budget.limit - budget.spent\n    }));\n  };\n  const getGoalProgress = () => {\n    return goals.map(goal => ({\n      ...goal,\n      percentage: Math.min(goal.currentAmount / goal.targetAmount * 100, 100),\n      remaining: goal.targetAmount - goal.currentAmount\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Financial Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-card text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"$\", monthlyStats.income.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Monthly Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-card text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"$\", monthlyStats.expenses.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Monthly Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-card text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: monthlyStats.balance >= 0 ? 'text-success' : 'text-danger',\n            children: [\"$\", monthlyStats.balance.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Monthly Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Quick Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              className: \"me-2\",\n              onClick: () => dispatch(setShowAddTransactionModal(true)),\n              children: \"+ Add Transaction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              className: \"me-2\",\n              onClick: () => dispatch(setShowAddBudgetModal(true)),\n              children: \"+ Add Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              onClick: () => dispatch(setShowAddGoalModal(true)),\n              children: \"+ Add Goal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Recent Transactions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: getRecentTransactions().length > 0 ? getRecentTransactions().map(transaction => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between align-items-center mb-2 p-2 transaction-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: transaction.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: [format(new Date(transaction.date), 'MMM dd, yyyy'), \" \\u2022 \", transaction.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `badge ${transaction.type === 'income' ? 'bg-success' : 'bg-danger'}`,\n                children: [transaction.type === 'income' ? '+' : '-', \"$\", parseFloat(transaction.amount).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this)]\n            }, transaction.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              children: \"No transactions yet. Add your first transaction!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Budget Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: getBudgetProgress().map(budget => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"budget-progress\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: budget.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"$\", budget.spent.toFixed(2), \" / $\", budget.limit.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n                variant: budget.percentage > 90 ? 'danger' : budget.percentage > 75 ? 'warning' : 'success',\n                now: budget.percentage,\n                label: `${budget.percentage.toFixed(1)}%`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)]\n            }, budget.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Financial Goals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: getGoalProgress().map(goal => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"goal-progress\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: goal.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"$\", goal.currentAmount.toFixed(2), \" / $\", goal.targetAmount.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n                variant: \"info\",\n                now: goal.percentage,\n                label: `${goal.percentage.toFixed(1)}%`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: [\"Target: \", format(new Date(goal.targetDate), 'MMM dd, yyyy')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this)]\n            }, goal.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionModal, {\n      show: showAddTransactionModal,\n      onHide: () => dispatch(setShowAddTransactionModal(false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddBudgetModal, {\n      show: showAddBudgetModal,\n      onHide: () => dispatch(setShowAddBudgetModal(false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddGoalModal, {\n      show: showAddGoalModal,\n      onHide: () => dispatch(setShowAddGoalModal(false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"yXQ5wf/iT7ujBK2qo95CEdonYj8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","Row","Col","Card","Button","ProgressBar","Alert","format","setShowAddTransactionModal","setShowAddBudgetModal","setShowAddGoalModal","loadTransactions","loadBudgets","loadGoals","AddTransactionModal","AddBudgetModal","AddGoalModal","jsxDEV","_jsxDEV","Dashboard","_s","dispatch","items","transactions","state","budgets","goals","showAddTransactionModal","showAddBudgetModal","showAddGoalModal","ui","monthlyStats","setMonthlyStats","income","expenses","balance","length","currentMonth","Date","getMonth","currentYear","getFullYear","monthlyTransactions","filter","transaction","transactionDate","date","t","type","reduce","sum","parseFloat","amount","getRecentTransactions","sort","a","b","slice","getBudgetProgress","map","budget","percentage","Math","min","spent","limit","remaining","getGoalProgress","goal","currentAmount","targetAmount","children","className","fileName","_jsxFileName","lineNumber","columnNumber","md","toFixed","Header","Body","variant","onClick","lg","description","category","id","name","now","label","targetDate","show","onHide","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/React Final Project/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { \r\n  Row, \r\n  Col, \r\n  Card, \r\n  Button, \r\n  ProgressBar, \r\n  Alert \r\n} from 'react-bootstrap';\r\nimport { format } from 'date-fns';\r\nimport { \r\n  setShowAddTransactionModal, \r\n  setShowAddBudgetModal, \r\n  setShowAddGoalModal \r\n} from '../store/slices/uiSlice';\r\nimport { loadTransactions } from '../store/slices/transactionsSlice';\r\nimport { loadBudgets } from '../store/slices/budgetsSlice';\r\nimport { loadGoals } from '../store/slices/goalsSlice';\r\nimport AddTransactionModal from './modals/AddTransactionModal';\r\nimport AddBudgetModal from './modals/AddBudgetModal';\r\nimport AddGoalModal from './modals/AddGoalModal';\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const { items: transactions } = useSelector(state => state.transactions);\r\n  const { items: budgets } = useSelector(state => state.budgets);\r\n  const { items: goals } = useSelector(state => state.goals);\r\n  const { \r\n    showAddTransactionModal, \r\n    showAddBudgetModal, \r\n    showAddGoalModal \r\n  } = useSelector(state => state.ui);\r\n\r\n  const [monthlyStats, setMonthlyStats] = useState({\r\n    income: 0,\r\n    expenses: 0,\r\n    balance: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Load data if not already loaded\r\n    if (transactions.length === 0) dispatch(loadTransactions());\r\n    if (budgets.length === 0) dispatch(loadBudgets());\r\n    if (goals.length === 0) dispatch(loadGoals());\r\n  }, [dispatch, transactions.length, budgets.length, goals.length]);\r\n\r\n  useEffect(() => {\r\n    // Calculate monthly statistics\r\n    const currentMonth = new Date().getMonth();\r\n    const currentYear = new Date().getFullYear();\r\n    \r\n    const monthlyTransactions = transactions.filter(transaction => {\r\n      const transactionDate = new Date(transaction.date);\r\n      return transactionDate.getMonth() === currentMonth && \r\n             transactionDate.getFullYear() === currentYear;\r\n    });\r\n\r\n    const income = monthlyTransactions\r\n      .filter(t => t.type === 'income')\r\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\r\n    \r\n    const expenses = monthlyTransactions\r\n      .filter(t => t.type === 'expense')\r\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\r\n\r\n    setMonthlyStats({\r\n      income,\r\n      expenses,\r\n      balance: income - expenses\r\n    });\r\n  }, [transactions]);\r\n\r\n  const getRecentTransactions = () => {\r\n    return transactions\r\n      .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n      .slice(0, 5);\r\n  };\r\n\r\n  const getBudgetProgress = () => {\r\n    return budgets.map(budget => ({\r\n      ...budget,\r\n      percentage: Math.min((budget.spent / budget.limit) * 100, 100),\r\n      remaining: budget.limit - budget.spent\r\n    }));\r\n  };\r\n\r\n  const getGoalProgress = () => {\r\n    return goals.map(goal => ({\r\n      ...goal,\r\n      percentage: Math.min((goal.currentAmount / goal.targetAmount) * 100, 100),\r\n      remaining: goal.targetAmount - goal.currentAmount\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"mb-4\">Financial Dashboard</h1>\r\n      \r\n      {/* Monthly Overview */}\r\n      <Row className=\"mb-4\">\r\n        <Col md={4}>\r\n          <div className=\"stats-card text-center\">\r\n            <h3>${monthlyStats.income.toFixed(2)}</h3>\r\n            <p>Monthly Income</p>\r\n          </div>\r\n        </Col>\r\n        <Col md={4}>\r\n          <div className=\"stats-card text-center\">\r\n            <h3>${monthlyStats.expenses.toFixed(2)}</h3>\r\n            <p>Monthly Expenses</p>\r\n          </div>\r\n        </Col>\r\n        <Col md={4}>\r\n          <div className=\"stats-card text-center\">\r\n            <h3 className={monthlyStats.balance >= 0 ? 'text-success' : 'text-danger'}>\r\n              ${monthlyStats.balance.toFixed(2)}\r\n            </h3>\r\n            <p>Monthly Balance</p>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Quick Actions */}\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Quick Actions</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Button \r\n                variant=\"primary\" \r\n                className=\"me-2\"\r\n                onClick={() => dispatch(setShowAddTransactionModal(true))}\r\n              >\r\n                + Add Transaction\r\n              </Button>\r\n              <Button \r\n                variant=\"success\" \r\n                className=\"me-2\"\r\n                onClick={() => dispatch(setShowAddBudgetModal(true))}\r\n              >\r\n                + Add Budget\r\n              </Button>\r\n              <Button \r\n                variant=\"info\"\r\n                onClick={() => dispatch(setShowAddGoalModal(true))}\r\n              >\r\n                + Add Goal\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Recent Transactions */}\r\n        <Col lg={6} className=\"mb-4\">\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Recent Transactions</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {getRecentTransactions().length > 0 ? (\r\n                getRecentTransactions().map(transaction => (\r\n                  <div key={transaction.id} className=\"d-flex justify-content-between align-items-center mb-2 p-2 transaction-item\">\r\n                    <div>\r\n                      <strong>{transaction.description}</strong>\r\n                      <br />\r\n                      <small className=\"text-muted\">\r\n                        {format(new Date(transaction.date), 'MMM dd, yyyy')} • {transaction.category}\r\n                      </small>\r\n                    </div>\r\n                    <span className={`badge ${transaction.type === 'income' ? 'bg-success' : 'bg-danger'}`}>\r\n                      {transaction.type === 'income' ? '+' : '-'}${parseFloat(transaction.amount).toFixed(2)}\r\n                    </span>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <Alert variant=\"info\">No transactions yet. Add your first transaction!</Alert>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        {/* Budget Progress */}\r\n        <Col lg={6} className=\"mb-4\">\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Budget Progress</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {getBudgetProgress().map(budget => (\r\n                <div key={budget.id} className=\"budget-progress\">\r\n                  <div className=\"d-flex justify-content-between mb-1\">\r\n                    <span>{budget.name}</span>\r\n                    <span>${budget.spent.toFixed(2)} / ${budget.limit.toFixed(2)}</span>\r\n                  </div>\r\n                  <ProgressBar \r\n                    variant={budget.percentage > 90 ? 'danger' : budget.percentage > 75 ? 'warning' : 'success'}\r\n                    now={budget.percentage} \r\n                    label={`${budget.percentage.toFixed(1)}%`}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Financial Goals */}\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Financial Goals</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {getGoalProgress().map(goal => (\r\n                <div key={goal.id} className=\"goal-progress\">\r\n                  <div className=\"d-flex justify-content-between mb-1\">\r\n                    <span>{goal.name}</span>\r\n                    <span>${goal.currentAmount.toFixed(2)} / ${goal.targetAmount.toFixed(2)}</span>\r\n                  </div>\r\n                  <ProgressBar \r\n                    variant=\"info\"\r\n                    now={goal.percentage} \r\n                    label={`${goal.percentage.toFixed(1)}%`}\r\n                  />\r\n                  <small className=\"text-muted\">\r\n                    Target: {format(new Date(goal.targetDate), 'MMM dd, yyyy')}\r\n                  </small>\r\n                </div>\r\n              ))}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Modals */}\r\n      <AddTransactionModal \r\n        show={showAddTransactionModal}\r\n        onHide={() => dispatch(setShowAddTransactionModal(false))}\r\n      />\r\n      <AddBudgetModal \r\n        show={showAddBudgetModal}\r\n        onHide={() => dispatch(setShowAddBudgetModal(false))}\r\n      />\r\n      <AddGoalModal \r\n        show={showAddGoalModal}\r\n        onHide={() => dispatch(setShowAddGoalModal(false))}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}