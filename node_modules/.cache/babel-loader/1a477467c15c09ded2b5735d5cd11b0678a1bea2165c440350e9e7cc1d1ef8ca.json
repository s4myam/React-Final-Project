{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const loadGoals = createAsyncThunk('goals/loadGoals', async () => {\n  const savedGoals = localStorage.getItem('goals');\n  return savedGoals ? JSON.parse(savedGoals) : [{\n    id: '1',\n    name: 'Emergency Fund',\n    targetAmount: 5000,\n    currentAmount: 1200,\n    targetDate: '2024-12-31',\n    color: '#FF6B6B'\n  }, {\n    id: '2',\n    name: 'Vacation Fund',\n    targetAmount: 3000,\n    currentAmount: 800,\n    targetDate: '2024-06-30',\n    color: '#4ECDC4'\n  }];\n});\nconst goalsSlice = createSlice({\n  name: 'goals',\n  initialState: {\n    items: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    addGoal: (state, action) => {\n      state.items.push(action.payload);\n      localStorage.setItem('goals', JSON.stringify(state.items));\n    },\n    updateGoal: (state, action) => {\n      const {\n        id,\n        ...updates\n      } = action.payload;\n      const index = state.items.findIndex(item => item.id === id);\n      if (index !== -1) {\n        state.items[index] = {\n          ...state.items[index],\n          ...updates\n        };\n        localStorage.setItem('goals', JSON.stringify(state.items));\n      }\n    },\n    deleteGoal: (state, action) => {\n      state.items = state.items.filter(item => item.id !== action.payload);\n      localStorage.setItem('goals', JSON.stringify(state.items));\n    },\n    updateGoalProgress: (state, action) => {\n      const {\n        id,\n        amount\n      } = action.payload;\n      const goal = state.items.find(item => item.id === id);\n      if (goal) {\n        goal.currentAmount = Math.min(goal.currentAmount + amount, goal.targetAmount);\n        localStorage.setItem('goals', JSON.stringify(state.items));\n      }\n    },\n    resetGoalProgress: (state, action) => {\n      const id = action.payload;\n      const goal = state.items.find(item => item.id === id);\n      if (goal) {\n        goal.currentAmount = 0;\n        localStorage.setItem('goals', JSON.stringify(state.items));\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loadGoals.pending, state => {\n      state.status = 'loading';\n    }).addCase(loadGoals.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.items = action.payload;\n    }).addCase(loadGoals.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  addGoal,\n  updateGoal,\n  deleteGoal,\n  updateGoalProgress,\n  resetGoalProgress\n} = goalsSlice.actions;\nexport default goalsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","loadGoals","savedGoals","localStorage","getItem","JSON","parse","id","name","targetAmount","currentAmount","targetDate","color","goalsSlice","initialState","items","status","error","reducers","addGoal","state","action","push","payload","setItem","stringify","updateGoal","updates","index","findIndex","item","deleteGoal","filter","updateGoalProgress","amount","goal","find","Math","min","resetGoalProgress","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","reducer"],"sources":["C:/Users/ACER/Desktop/React Final Project/src/store/slices/goalsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const loadGoals = createAsyncThunk(\r\n  'goals/loadGoals',\r\n  async () => {\r\n    const savedGoals = localStorage.getItem('goals');\r\n    return savedGoals ? JSON.parse(savedGoals) : [\r\n      { \r\n        id: '1', \r\n        name: 'Emergency Fund', \r\n        targetAmount: 5000, \r\n        currentAmount: 1200, \r\n        targetDate: '2024-12-31',\r\n        color: '#FF6B6B' \r\n      },\r\n      { \r\n        id: '2', \r\n        name: 'Vacation Fund', \r\n        targetAmount: 3000, \r\n        currentAmount: 800, \r\n        targetDate: '2024-06-30',\r\n        color: '#4ECDC4' \r\n      },\r\n    ];\r\n  }\r\n);\r\n\r\nconst goalsSlice = createSlice({\r\n  name: 'goals',\r\n  initialState: {\r\n    items: [],\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    addGoal: (state, action) => {\r\n      state.items.push(action.payload);\r\n      localStorage.setItem('goals', JSON.stringify(state.items));\r\n    },\r\n    updateGoal: (state, action) => {\r\n      const { id, ...updates } = action.payload;\r\n      const index = state.items.findIndex(item => item.id === id);\r\n      if (index !== -1) {\r\n        state.items[index] = { ...state.items[index], ...updates };\r\n        localStorage.setItem('goals', JSON.stringify(state.items));\r\n      }\r\n    },\r\n    deleteGoal: (state, action) => {\r\n      state.items = state.items.filter(item => item.id !== action.payload);\r\n      localStorage.setItem('goals', JSON.stringify(state.items));\r\n    },\r\n    updateGoalProgress: (state, action) => {\r\n      const { id, amount } = action.payload;\r\n      const goal = state.items.find(item => item.id === id);\r\n      if (goal) {\r\n        goal.currentAmount = Math.min(goal.currentAmount + amount, goal.targetAmount);\r\n        localStorage.setItem('goals', JSON.stringify(state.items));\r\n      }\r\n    },\r\n    resetGoalProgress: (state, action) => {\r\n      const id = action.payload;\r\n      const goal = state.items.find(item => item.id === id);\r\n      if (goal) {\r\n        goal.currentAmount = 0;\r\n        localStorage.setItem('goals', JSON.stringify(state.items));\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loadGoals.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(loadGoals.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.items = action.payload;\r\n      })\r\n      .addCase(loadGoals.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { \r\n  addGoal, \r\n  updateGoal, \r\n  deleteGoal, \r\n  updateGoalProgress, \r\n  resetGoalProgress \r\n} = goalsSlice.actions;\r\nexport default goalsSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}