{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\React Final Project\\\\src\\\\components\\\\Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Row, Col, Card, Form, Table, Badge } from 'react-bootstrap';\nimport { format, subMonths, startOfMonth, endOfMonth } from 'date-fns';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nconst Reports = () => {\n  _s();\n  const {\n    items: transactions\n  } = useSelector(state => state.transactions);\n  const {\n    items: budgets\n  } = useSelector(state => state.budgets);\n  const {\n    items: goals\n  } = useSelector(state => state.goals);\n  const [selectedPeriod, setSelectedPeriod] = useState('6');\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear().toString());\n  const currentYear = new Date().getFullYear();\n  const yearOptions = Array.from({\n    length: 5\n  }, (_, i) => (currentYear - 2 + i).toString());\n  useEffect(() => {\n    // Component will re-render when data changes\n  }, [transactions, budgets, goals]);\n  const getMonthlyData = () => {\n    const months = [];\n    const incomeData = [];\n    const expenseData = [];\n    const period = parseInt(selectedPeriod);\n    const year = parseInt(selectedYear);\n    for (let i = period - 1; i >= 0; i--) {\n      const date = subMonths(new Date(year, 11, 31), i);\n      const monthName = format(date, 'MMM');\n      months.push(monthName);\n      const monthStart = startOfMonth(date);\n      const monthEnd = endOfMonth(date);\n      const monthTransactions = transactions.filter(t => {\n        const transactionDate = new Date(t.date);\n        return transactionDate >= monthStart && transactionDate <= monthEnd;\n      });\n      const income = monthTransactions.filter(t => t.type === 'income').reduce((sum, t) => sum + parseFloat(t.amount), 0);\n      const expenses = monthTransactions.filter(t => t.type === 'expense').reduce((sum, t) => sum + parseFloat(t.amount), 0);\n      incomeData.push(income);\n      expenseData.push(expenses);\n    }\n    return {\n      months,\n      incomeData,\n      expenseData\n    };\n  };\n  const getCategoryData = () => {\n    const categoryMap = new Map();\n    transactions.filter(t => t.type === 'expense').forEach(t => {\n      const amount = parseFloat(t.amount);\n      categoryMap.set(t.category, (categoryMap.get(t.category) || 0) + amount);\n    });\n    const categories = Array.from(categoryMap.keys());\n    const amounts = Array.from(categoryMap.values());\n    return {\n      categories,\n      amounts\n    };\n  };\n  const getBudgetComparisonData = () => {\n    return budgets.map(budget => ({\n      name: budget.name,\n      limit: budget.limit,\n      spent: budget.spent,\n      remaining: budget.limit - budget.spent,\n      percentage: budget.spent / budget.limit * 100\n    }));\n  };\n  const getTopTransactions = () => {\n    return transactions.sort((a, b) => parseFloat(b.amount) - parseFloat(a.amount)).slice(0, 10);\n  };\n  const {\n    months,\n    incomeData,\n    expenseData\n  } = getMonthlyData();\n  const {\n    categories,\n    amounts\n  } = getCategoryData();\n  const budgetComparison = getBudgetComparisonData();\n  const topTransactions = getTopTransactions();\n  const lineChartData = {\n    labels: months,\n    datasets: [{\n      label: 'Income',\n      data: incomeData,\n      borderColor: 'rgb(75, 192, 192)',\n      backgroundColor: 'rgba(75, 192, 192, 0.5)',\n      tension: 0.1\n    }, {\n      label: 'Expenses',\n      data: expenseData,\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      tension: 0.1\n    }]\n  };\n  const categoryChartData = {\n    labels: categories,\n    datasets: [{\n      data: amounts,\n      backgroundColor: ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD', '#98D8C8', '#F7DC6F', '#BB8FCE', '#85C1E9'],\n      borderWidth: 2,\n      borderColor: '#fff'\n    }]\n  };\n  const budgetChartData = {\n    labels: budgetComparison.map(b => b.name),\n    datasets: [{\n      label: 'Spent',\n      data: budgetComparison.map(b => b.spent),\n      backgroundColor: budgetComparison.map(b => b.percentage > 100 ? '#FF6B6B' : b.percentage > 90 ? '#FFA500' : '#4ECDC4'),\n      borderWidth: 1,\n      borderColor: '#fff'\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Financial Overview'\n      }\n    }\n  };\n  const getTotalIncome = () => {\n    return transactions.filter(t => t.type === 'income').reduce((sum, t) => sum + parseFloat(t.amount), 0);\n  };\n  const getTotalExpenses = () => {\n    return transactions.filter(t => t.type === 'expense').reduce((sum, t) => sum + parseFloat(t.amount), 0);\n  };\n  const getNetWorth = () => {\n    return getTotalIncome() - getTotalExpenses();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Financial Reports & Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Time Period\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                value: selectedPeriod,\n                onChange: e => setSelectedPeriod(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3\",\n                  children: \"Last 3 Months\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"6\",\n                  children: \"Last 6 Months\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"12\",\n                  children: \"Last 12 Months\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                value: selectedYear,\n                onChange: e => setSelectedYear(e.target.value),\n                children: yearOptions.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: year,\n                  children: year\n                }, year, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-card text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"$\", getTotalIncome().toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Total Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-card text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"$\", getTotalExpenses().toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Total Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-card text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: getNetWorth() >= 0 ? 'text-success' : 'text-danger',\n            children: [\"$\", getNetWorth().toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Net Worth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-card text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: transactions.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Total Transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Income vs Expenses Trend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              data: lineChartData,\n              options: chartOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Expense Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Doughnut, {\n              data: categoryChartData,\n              options: chartOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Budget vs Actual Spending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: budgetChartData,\n              options: chartOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Budget Performance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              responsive: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Limit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Spent\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: budgetComparison.map((budget, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: budget.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\"$\", budget.limit.toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\"$\", budget.spent.toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Badge, {\n                      bg: budget.percentage > 100 ? 'danger' : budget.percentage > 90 ? 'warning' : 'success',\n                      children: [budget.percentage.toFixed(1), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Top 10 Transactions by Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              responsive: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: topTransactions.map(transaction => {\n                  var _budgets$find;\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: format(new Date(transaction.date), 'MMM dd, yyyy')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: transaction.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(Badge, {\n                        bg: \"secondary\",\n                        style: {\n                          backgroundColor: (_budgets$find = budgets.find(b => b.name === transaction.category)) === null || _budgets$find === void 0 ? void 0 : _budgets$find.color\n                        },\n                        children: transaction.category\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 373,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(Badge, {\n                        bg: transaction.type === 'income' ? 'success' : 'danger',\n                        children: transaction.type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 383,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: transaction.type === 'income' ? 'text-success' : 'text-danger',\n                      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [transaction.type === 'income' ? '+' : '-', \"$\", parseFloat(transaction.amount).toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 388,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 23\n                    }, this)]\n                  }, transaction.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 21\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"Gl+dfniEQ7tDuj5xQTJxzYn+d8Q=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","Row","Col","Card","Form","Table","Badge","format","subMonths","startOfMonth","endOfMonth","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","Line","Bar","Doughnut","jsxDEV","_jsxDEV","register","Reports","_s","items","transactions","state","budgets","goals","selectedPeriod","setSelectedPeriod","selectedYear","setSelectedYear","Date","getFullYear","toString","currentYear","yearOptions","Array","from","length","_","i","getMonthlyData","months","incomeData","expenseData","period","parseInt","year","date","monthName","push","monthStart","monthEnd","monthTransactions","filter","t","transactionDate","income","type","reduce","sum","parseFloat","amount","expenses","getCategoryData","categoryMap","Map","forEach","set","category","get","categories","keys","amounts","values","getBudgetComparisonData","map","budget","name","limit","spent","remaining","percentage","getTopTransactions","sort","a","b","slice","budgetComparison","topTransactions","lineChartData","labels","datasets","label","data","borderColor","backgroundColor","tension","categoryChartData","borderWidth","budgetChartData","chartOptions","responsive","plugins","legend","position","title","display","text","getTotalIncome","getTotalExpenses","getNetWorth","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Body","md","Group","Label","Select","value","onChange","e","target","toFixed","lg","Header","options","index","bg","transaction","_budgets$find","description","style","find","color","id","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/React Final Project/src/components/Reports.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { \r\n  Row, \r\n  Col, \r\n  Card, \r\n  Form, \r\n  Table,\r\n  Badge\r\n} from 'react-bootstrap';\r\nimport { format, subMonths, startOfMonth, endOfMonth } from 'date-fns';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Reports = () => {\r\n  const { items: transactions } = useSelector(state => state.transactions);\r\n  const { items: budgets } = useSelector(state => state.budgets);\r\n  const { items: goals } = useSelector(state => state.goals);\r\n\r\n  const [selectedPeriod, setSelectedPeriod] = useState('6');\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear().toString());\r\n\r\n  const currentYear = new Date().getFullYear();\r\n  const yearOptions = Array.from({ length: 5 }, (_, i) => (currentYear - 2 + i).toString());\r\n\r\n  useEffect(() => {\r\n    // Component will re-render when data changes\r\n  }, [transactions, budgets, goals]);\r\n\r\n  const getMonthlyData = () => {\r\n    const months = [];\r\n    const incomeData = [];\r\n    const expenseData = [];\r\n    \r\n    const period = parseInt(selectedPeriod);\r\n    const year = parseInt(selectedYear);\r\n    \r\n    for (let i = period - 1; i >= 0; i--) {\r\n      const date = subMonths(new Date(year, 11, 31), i);\r\n      const monthName = format(date, 'MMM');\r\n      months.push(monthName);\r\n      \r\n      const monthStart = startOfMonth(date);\r\n      const monthEnd = endOfMonth(date);\r\n      \r\n      const monthTransactions = transactions.filter(t => {\r\n        const transactionDate = new Date(t.date);\r\n        return transactionDate >= monthStart && transactionDate <= monthEnd;\r\n      });\r\n      \r\n      const income = monthTransactions\r\n        .filter(t => t.type === 'income')\r\n        .reduce((sum, t) => sum + parseFloat(t.amount), 0);\r\n      \r\n      const expenses = monthTransactions\r\n        .filter(t => t.type === 'expense')\r\n        .reduce((sum, t) => sum + parseFloat(t.amount), 0);\r\n      \r\n      incomeData.push(income);\r\n      expenseData.push(expenses);\r\n    }\r\n    \r\n    return { months, incomeData, expenseData };\r\n  };\r\n\r\n  const getCategoryData = () => {\r\n    const categoryMap = new Map();\r\n    \r\n    transactions\r\n      .filter(t => t.type === 'expense')\r\n      .forEach(t => {\r\n        const amount = parseFloat(t.amount);\r\n        categoryMap.set(t.category, (categoryMap.get(t.category) || 0) + amount);\r\n      });\r\n    \r\n    const categories = Array.from(categoryMap.keys());\r\n    const amounts = Array.from(categoryMap.values());\r\n    \r\n    return { categories, amounts };\r\n  };\r\n\r\n  const getBudgetComparisonData = () => {\r\n    return budgets.map(budget => ({\r\n      name: budget.name,\r\n      limit: budget.limit,\r\n      spent: budget.spent,\r\n      remaining: budget.limit - budget.spent,\r\n      percentage: (budget.spent / budget.limit) * 100\r\n    }));\r\n  };\r\n\r\n  const getTopTransactions = () => {\r\n    return transactions\r\n      .sort((a, b) => parseFloat(b.amount) - parseFloat(a.amount))\r\n      .slice(0, 10);\r\n  };\r\n\r\n  const { months, incomeData, expenseData } = getMonthlyData();\r\n  const { categories, amounts } = getCategoryData();\r\n  const budgetComparison = getBudgetComparisonData();\r\n  const topTransactions = getTopTransactions();\r\n\r\n  const lineChartData = {\r\n    labels: months,\r\n    datasets: [\r\n      {\r\n        label: 'Income',\r\n        data: incomeData,\r\n        borderColor: 'rgb(75, 192, 192)',\r\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n        tension: 0.1\r\n      },\r\n      {\r\n        label: 'Expenses',\r\n        data: expenseData,\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n        tension: 0.1\r\n      }\r\n    ]\r\n  };\r\n\r\n  const categoryChartData = {\r\n    labels: categories,\r\n    datasets: [\r\n      {\r\n        data: amounts,\r\n        backgroundColor: [\r\n          '#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7',\r\n          '#DDA0DD', '#98D8C8', '#F7DC6F', '#BB8FCE', '#85C1E9'\r\n        ],\r\n        borderWidth: 2,\r\n        borderColor: '#fff'\r\n      }\r\n    ]\r\n  };\r\n\r\n  const budgetChartData = {\r\n    labels: budgetComparison.map(b => b.name),\r\n    datasets: [\r\n      {\r\n        label: 'Spent',\r\n        data: budgetComparison.map(b => b.spent),\r\n        backgroundColor: budgetComparison.map(b => \r\n          b.percentage > 100 ? '#FF6B6B' : \r\n          b.percentage > 90 ? '#FFA500' : '#4ECDC4'\r\n        ),\r\n        borderWidth: 1,\r\n        borderColor: '#fff'\r\n      }\r\n    ]\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Financial Overview'\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTotalIncome = () => {\r\n    return transactions\r\n      .filter(t => t.type === 'income')\r\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\r\n  };\r\n\r\n  const getTotalExpenses = () => {\r\n    return transactions\r\n      .filter(t => t.type === 'expense')\r\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\r\n  };\r\n\r\n  const getNetWorth = () => {\r\n    return getTotalIncome() - getTotalExpenses();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"mb-4\">Financial Reports & Analytics</h1>\r\n\r\n      {/* Filters */}\r\n      <Card className=\"mb-4\">\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Time Period</Form.Label>\r\n                <Form.Select\r\n                  value={selectedPeriod}\r\n                  onChange={(e) => setSelectedPeriod(e.target.value)}\r\n                >\r\n                  <option value=\"3\">Last 3 Months</option>\r\n                  <option value=\"6\">Last 6 Months</option>\r\n                  <option value=\"12\">Last 12 Months</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Year</Form.Label>\r\n                <Form.Select\r\n                  value={selectedYear}\r\n                  onChange={(e) => setSelectedYear(e.target.value)}\r\n                >\r\n                  {yearOptions.map(year => (\r\n                    <option key={year} value={year}>{year}</option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Summary Cards */}\r\n      <Row className=\"mb-4\">\r\n        <Col md={3}>\r\n          <div className=\"stats-card text-center\">\r\n            <h3>${getTotalIncome().toFixed(2)}</h3>\r\n            <p>Total Income</p>\r\n          </div>\r\n        </Col>\r\n        <Col md={3}>\r\n          <div className=\"stats-card text-center\">\r\n            <h3>${getTotalExpenses().toFixed(2)}</h3>\r\n            <p>Total Expenses</p>\r\n          </div>\r\n        </Col>\r\n        <Col md={3}>\r\n          <div className=\"stats-card text-center\">\r\n            <h3 className={getNetWorth() >= 0 ? 'text-success' : 'text-danger'}>\r\n              ${getNetWorth().toFixed(2)}\r\n            </h3>\r\n            <p>Net Worth</p>\r\n          </div>\r\n        </Col>\r\n        <Col md={3}>\r\n          <div className=\"stats-card text-center\">\r\n            <h3>{transactions.length}</h3>\r\n            <p>Total Transactions</p>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Charts */}\r\n      <Row className=\"mb-4\">\r\n        <Col lg={8}>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Income vs Expenses Trend</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Line data={lineChartData} options={chartOptions} />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={4}>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Expense Categories</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Doughnut data={categoryChartData} options={chartOptions} />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-4\">\r\n        <Col lg={6}>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Budget vs Actual Spending</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Bar data={budgetChartData} options={chartOptions} />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={6}>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Budget Performance</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Table responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Category</th>\r\n                    <th>Limit</th>\r\n                    <th>Spent</th>\r\n                    <th>Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {budgetComparison.map((budget, index) => (\r\n                    <tr key={index}>\r\n                      <td>{budget.name}</td>\r\n                      <td>${budget.limit.toFixed(2)}</td>\r\n                      <td>${budget.spent.toFixed(2)}</td>\r\n                      <td>\r\n                        <Badge \r\n                          bg={\r\n                            budget.percentage > 100 ? 'danger' : \r\n                            budget.percentage > 90 ? 'warning' : 'success'\r\n                          }\r\n                        >\r\n                          {budget.percentage.toFixed(1)}%\r\n                        </Badge>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Top Transactions */}\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Top 10 Transactions by Amount</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Table responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Date</th>\r\n                    <th>Description</th>\r\n                    <th>Category</th>\r\n                    <th>Type</th>\r\n                    <th>Amount</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {topTransactions.map(transaction => (\r\n                    <tr key={transaction.id}>\r\n                      <td>{format(new Date(transaction.date), 'MMM dd, yyyy')}</td>\r\n                      <td>{transaction.description}</td>\r\n                      <td>\r\n                        <Badge \r\n                          bg=\"secondary\"\r\n                          style={{ \r\n                            backgroundColor: budgets.find(b => b.name === transaction.category)?.color \r\n                          }}\r\n                        >\r\n                          {transaction.category}\r\n                        </Badge>\r\n                      </td>\r\n                      <td>\r\n                        <Badge bg={transaction.type === 'income' ? 'success' : 'danger'}>\r\n                          {transaction.type}\r\n                        </Badge>\r\n                      </td>\r\n                      <td className={transaction.type === 'income' ? 'text-success' : 'text-danger'}>\r\n                        <strong>\r\n                          {transaction.type === 'income' ? '+' : '-'}${parseFloat(transaction.amount).toFixed(2)}\r\n                        </strong>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,SACEC,GAAG,EACHC,GAAG,EACHC,IAAI,EACJC,IAAI,EACJC,KAAK,EACLC,KAAK,QACA,iBAAiB;AACxB,SAASC,MAAM,EAAEC,SAAS,EAAEC,YAAY,EAAEC,UAAU,QAAQ,UAAU;AACtE,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,IAAI,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtDd,OAAO,CAACe,QAAQ,CACdd,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC,KAAK,EAAEC;EAAa,CAAC,GAAG/B,WAAW,CAACgC,KAAK,IAAIA,KAAK,CAACD,YAAY,CAAC;EACxE,MAAM;IAAED,KAAK,EAAEG;EAAQ,CAAC,GAAGjC,WAAW,CAACgC,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC;EAC9D,MAAM;IAAEH,KAAK,EAAEI;EAAM,CAAC,GAAGlC,WAAW,CAACgC,KAAK,IAAIA,KAAK,CAACE,KAAK,CAAC;EAE1D,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGtC,QAAQ,CAAC,GAAG,CAAC;EACzD,MAAM,CAACuC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC,IAAIyC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC;EAErF,MAAMC,WAAW,GAAG,IAAIH,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAC5C,MAAMG,WAAW,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK,CAACN,WAAW,GAAG,CAAC,GAAGM,CAAC,EAAEP,QAAQ,CAAC,CAAC,CAAC;EAEzF1C,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,CAACgC,YAAY,EAAEE,OAAO,EAAEC,KAAK,CAAC,CAAC;EAElC,MAAMe,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMC,UAAU,GAAG,EAAE;IACrB,MAAMC,WAAW,GAAG,EAAE;IAEtB,MAAMC,MAAM,GAAGC,QAAQ,CAACnB,cAAc,CAAC;IACvC,MAAMoB,IAAI,GAAGD,QAAQ,CAACjB,YAAY,CAAC;IAEnC,KAAK,IAAIW,CAAC,GAAGK,MAAM,GAAG,CAAC,EAAEL,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MACpC,MAAMQ,IAAI,GAAGhD,SAAS,CAAC,IAAI+B,IAAI,CAACgB,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAEP,CAAC,CAAC;MACjD,MAAMS,SAAS,GAAGlD,MAAM,CAACiD,IAAI,EAAE,KAAK,CAAC;MACrCN,MAAM,CAACQ,IAAI,CAACD,SAAS,CAAC;MAEtB,MAAME,UAAU,GAAGlD,YAAY,CAAC+C,IAAI,CAAC;MACrC,MAAMI,QAAQ,GAAGlD,UAAU,CAAC8C,IAAI,CAAC;MAEjC,MAAMK,iBAAiB,GAAG9B,YAAY,CAAC+B,MAAM,CAACC,CAAC,IAAI;QACjD,MAAMC,eAAe,GAAG,IAAIzB,IAAI,CAACwB,CAAC,CAACP,IAAI,CAAC;QACxC,OAAOQ,eAAe,IAAIL,UAAU,IAAIK,eAAe,IAAIJ,QAAQ;MACrE,CAAC,CAAC;MAEF,MAAMK,MAAM,GAAGJ,iBAAiB,CAC7BC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACG,IAAI,KAAK,QAAQ,CAAC,CAChCC,MAAM,CAAC,CAACC,GAAG,EAAEL,CAAC,KAAKK,GAAG,GAAGC,UAAU,CAACN,CAAC,CAACO,MAAM,CAAC,EAAE,CAAC,CAAC;MAEpD,MAAMC,QAAQ,GAAGV,iBAAiB,CAC/BC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACG,IAAI,KAAK,SAAS,CAAC,CACjCC,MAAM,CAAC,CAACC,GAAG,EAAEL,CAAC,KAAKK,GAAG,GAAGC,UAAU,CAACN,CAAC,CAACO,MAAM,CAAC,EAAE,CAAC,CAAC;MAEpDnB,UAAU,CAACO,IAAI,CAACO,MAAM,CAAC;MACvBb,WAAW,CAACM,IAAI,CAACa,QAAQ,CAAC;IAC5B;IAEA,OAAO;MAAErB,MAAM;MAAEC,UAAU;MAAEC;IAAY,CAAC;EAC5C,CAAC;EAED,MAAMoB,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAC;IAE7B3C,YAAY,CACT+B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACG,IAAI,KAAK,SAAS,CAAC,CACjCS,OAAO,CAACZ,CAAC,IAAI;MACZ,MAAMO,MAAM,GAAGD,UAAU,CAACN,CAAC,CAACO,MAAM,CAAC;MACnCG,WAAW,CAACG,GAAG,CAACb,CAAC,CAACc,QAAQ,EAAE,CAACJ,WAAW,CAACK,GAAG,CAACf,CAAC,CAACc,QAAQ,CAAC,IAAI,CAAC,IAAIP,MAAM,CAAC;IAC1E,CAAC,CAAC;IAEJ,MAAMS,UAAU,GAAGnC,KAAK,CAACC,IAAI,CAAC4B,WAAW,CAACO,IAAI,CAAC,CAAC,CAAC;IACjD,MAAMC,OAAO,GAAGrC,KAAK,CAACC,IAAI,CAAC4B,WAAW,CAACS,MAAM,CAAC,CAAC,CAAC;IAEhD,OAAO;MAAEH,UAAU;MAAEE;IAAQ,CAAC;EAChC,CAAC;EAED,MAAME,uBAAuB,GAAGA,CAAA,KAAM;IACpC,OAAOlD,OAAO,CAACmD,GAAG,CAACC,MAAM,KAAK;MAC5BC,IAAI,EAAED,MAAM,CAACC,IAAI;MACjBC,KAAK,EAAEF,MAAM,CAACE,KAAK;MACnBC,KAAK,EAAEH,MAAM,CAACG,KAAK;MACnBC,SAAS,EAAEJ,MAAM,CAACE,KAAK,GAAGF,MAAM,CAACG,KAAK;MACtCE,UAAU,EAAGL,MAAM,CAACG,KAAK,GAAGH,MAAM,CAACE,KAAK,GAAI;IAC9C,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMI,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,OAAO5D,YAAY,CAChB6D,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKzB,UAAU,CAACyB,CAAC,CAACxB,MAAM,CAAC,GAAGD,UAAU,CAACwB,CAAC,CAACvB,MAAM,CAAC,CAAC,CAC3DyB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EACjB,CAAC;EAED,MAAM;IAAE7C,MAAM;IAAEC,UAAU;IAAEC;EAAY,CAAC,GAAGH,cAAc,CAAC,CAAC;EAC5D,MAAM;IAAE8B,UAAU;IAAEE;EAAQ,CAAC,GAAGT,eAAe,CAAC,CAAC;EACjD,MAAMwB,gBAAgB,GAAGb,uBAAuB,CAAC,CAAC;EAClD,MAAMc,eAAe,GAAGN,kBAAkB,CAAC,CAAC;EAE5C,MAAMO,aAAa,GAAG;IACpBC,MAAM,EAAEjD,MAAM;IACdkD,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,QAAQ;MACfC,IAAI,EAAEnD,UAAU;MAChBoD,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE,yBAAyB;MAC1CC,OAAO,EAAE;IACX,CAAC,EACD;MACEJ,KAAK,EAAE,UAAU;MACjBC,IAAI,EAAElD,WAAW;MACjBmD,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE,yBAAyB;MAC1CC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;EAED,MAAMC,iBAAiB,GAAG;IACxBP,MAAM,EAAEpB,UAAU;IAClBqB,QAAQ,EAAE,CACR;MACEE,IAAI,EAAErB,OAAO;MACbuB,eAAe,EAAE,CACf,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EACrD,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CACtD;MACDG,WAAW,EAAE,CAAC;MACdJ,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMK,eAAe,GAAG;IACtBT,MAAM,EAAEH,gBAAgB,CAACZ,GAAG,CAACU,CAAC,IAAIA,CAAC,CAACR,IAAI,CAAC;IACzCc,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,OAAO;MACdC,IAAI,EAAEN,gBAAgB,CAACZ,GAAG,CAACU,CAAC,IAAIA,CAAC,CAACN,KAAK,CAAC;MACxCgB,eAAe,EAAER,gBAAgB,CAACZ,GAAG,CAACU,CAAC,IACrCA,CAAC,CAACJ,UAAU,GAAG,GAAG,GAAG,SAAS,GAC9BI,CAAC,CAACJ,UAAU,GAAG,EAAE,GAAG,SAAS,GAAG,SAClC,CAAC;MACDiB,WAAW,EAAE,CAAC;MACdJ,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMM,YAAY,GAAG;IACnBC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,OAAOtF,YAAY,CAChB+B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACG,IAAI,KAAK,QAAQ,CAAC,CAChCC,MAAM,CAAC,CAACC,GAAG,EAAEL,CAAC,KAAKK,GAAG,GAAGC,UAAU,CAACN,CAAC,CAACO,MAAM,CAAC,EAAE,CAAC,CAAC;EACtD,CAAC;EAED,MAAMgD,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAOvF,YAAY,CAChB+B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACG,IAAI,KAAK,SAAS,CAAC,CACjCC,MAAM,CAAC,CAACC,GAAG,EAAEL,CAAC,KAAKK,GAAG,GAAGC,UAAU,CAACN,CAAC,CAACO,MAAM,CAAC,EAAE,CAAC,CAAC;EACtD,CAAC;EAED,MAAMiD,WAAW,GAAGA,CAAA,KAAM;IACxB,OAAOF,cAAc,CAAC,CAAC,GAAGC,gBAAgB,CAAC,CAAC;EAC9C,CAAC;EAED,oBACE5F,OAAA;IAAA8F,QAAA,gBACE9F,OAAA;MAAI+F,SAAS,EAAC,MAAM;MAAAD,QAAA,EAAC;IAA6B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGvDnG,OAAA,CAACvB,IAAI;MAACsH,SAAS,EAAC,MAAM;MAAAD,QAAA,eACpB9F,OAAA,CAACvB,IAAI,CAAC2H,IAAI;QAAAN,QAAA,eACR9F,OAAA,CAACzB,GAAG;UAAAuH,QAAA,gBACF9F,OAAA,CAACxB,GAAG;YAAC6H,EAAE,EAAE,CAAE;YAAAP,QAAA,eACT9F,OAAA,CAACtB,IAAI,CAAC4H,KAAK;cAAAR,QAAA,gBACT9F,OAAA,CAACtB,IAAI,CAAC6H,KAAK;gBAAAT,QAAA,EAAC;cAAW;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACpCnG,OAAA,CAACtB,IAAI,CAAC8H,MAAM;gBACVC,KAAK,EAAEhG,cAAe;gBACtBiG,QAAQ,EAAGC,CAAC,IAAKjG,iBAAiB,CAACiG,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;gBAAAX,QAAA,gBAEnD9F,OAAA;kBAAQyG,KAAK,EAAC,GAAG;kBAAAX,QAAA,EAAC;gBAAa;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACxCnG,OAAA;kBAAQyG,KAAK,EAAC,GAAG;kBAAAX,QAAA,EAAC;gBAAa;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACxCnG,OAAA;kBAAQyG,KAAK,EAAC,IAAI;kBAAAX,QAAA,EAAC;gBAAc;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACNnG,OAAA,CAACxB,GAAG;YAAC6H,EAAE,EAAE,CAAE;YAAAP,QAAA,eACT9F,OAAA,CAACtB,IAAI,CAAC4H,KAAK;cAAAR,QAAA,gBACT9F,OAAA,CAACtB,IAAI,CAAC6H,KAAK;gBAAAT,QAAA,EAAC;cAAI;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC7BnG,OAAA,CAACtB,IAAI,CAAC8H,MAAM;gBACVC,KAAK,EAAE9F,YAAa;gBACpB+F,QAAQ,EAAGC,CAAC,IAAK/F,eAAe,CAAC+F,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;gBAAAX,QAAA,EAEhD7E,WAAW,CAACyC,GAAG,CAAC7B,IAAI,iBACnB7B,OAAA;kBAAmByG,KAAK,EAAE5E,IAAK;kBAAAiE,QAAA,EAAEjE;gBAAI,GAAxBA,IAAI;kBAAAmE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAA6B,CAC/C;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACS,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAGPnG,OAAA,CAACzB,GAAG;MAACwH,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnB9F,OAAA,CAACxB,GAAG;QAAC6H,EAAE,EAAE,CAAE;QAAAP,QAAA,eACT9F,OAAA;UAAK+F,SAAS,EAAC,wBAAwB;UAAAD,QAAA,gBACrC9F,OAAA;YAAA8F,QAAA,GAAI,GAAC,EAACH,cAAc,CAAC,CAAC,CAACkB,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvCnG,OAAA;YAAA8F,QAAA,EAAG;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNnG,OAAA,CAACxB,GAAG;QAAC6H,EAAE,EAAE,CAAE;QAAAP,QAAA,eACT9F,OAAA;UAAK+F,SAAS,EAAC,wBAAwB;UAAAD,QAAA,gBACrC9F,OAAA;YAAA8F,QAAA,GAAI,GAAC,EAACF,gBAAgB,CAAC,CAAC,CAACiB,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzCnG,OAAA;YAAA8F,QAAA,EAAG;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNnG,OAAA,CAACxB,GAAG;QAAC6H,EAAE,EAAE,CAAE;QAAAP,QAAA,eACT9F,OAAA;UAAK+F,SAAS,EAAC,wBAAwB;UAAAD,QAAA,gBACrC9F,OAAA;YAAI+F,SAAS,EAAEF,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,cAAc,GAAG,aAAc;YAAAC,QAAA,GAAC,GACjE,EAACD,WAAW,CAAC,CAAC,CAACgB,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACLnG,OAAA;YAAA8F,QAAA,EAAG;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNnG,OAAA,CAACxB,GAAG;QAAC6H,EAAE,EAAE,CAAE;QAAAP,QAAA,eACT9F,OAAA;UAAK+F,SAAS,EAAC,wBAAwB;UAAAD,QAAA,gBACrC9F,OAAA;YAAA8F,QAAA,EAAKzF,YAAY,CAACe;UAAM;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9BnG,OAAA;YAAA8F,QAAA,EAAG;UAAkB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNnG,OAAA,CAACzB,GAAG;MAACwH,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnB9F,OAAA,CAACxB,GAAG;QAACsI,EAAE,EAAE,CAAE;QAAAhB,QAAA,eACT9F,OAAA,CAACvB,IAAI;UAAAqH,QAAA,gBACH9F,OAAA,CAACvB,IAAI,CAACsI,MAAM;YAAAjB,QAAA,eACV9F,OAAA;cAAI+F,SAAS,EAAC,MAAM;cAAAD,QAAA,EAAC;YAAwB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC,eACdnG,OAAA,CAACvB,IAAI,CAAC2H,IAAI;YAAAN,QAAA,eACR9F,OAAA,CAACJ,IAAI;cAACgF,IAAI,EAAEJ,aAAc;cAACwC,OAAO,EAAE7B;YAAa;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNnG,OAAA,CAACxB,GAAG;QAACsI,EAAE,EAAE,CAAE;QAAAhB,QAAA,eACT9F,OAAA,CAACvB,IAAI;UAAAqH,QAAA,gBACH9F,OAAA,CAACvB,IAAI,CAACsI,MAAM;YAAAjB,QAAA,eACV9F,OAAA;cAAI+F,SAAS,EAAC,MAAM;cAAAD,QAAA,EAAC;YAAkB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,eACdnG,OAAA,CAACvB,IAAI,CAAC2H,IAAI;YAAAN,QAAA,eACR9F,OAAA,CAACF,QAAQ;cAAC8E,IAAI,EAAEI,iBAAkB;cAACgC,OAAO,EAAE7B;YAAa;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENnG,OAAA,CAACzB,GAAG;MAACwH,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnB9F,OAAA,CAACxB,GAAG;QAACsI,EAAE,EAAE,CAAE;QAAAhB,QAAA,eACT9F,OAAA,CAACvB,IAAI;UAAAqH,QAAA,gBACH9F,OAAA,CAACvB,IAAI,CAACsI,MAAM;YAAAjB,QAAA,eACV9F,OAAA;cAAI+F,SAAS,EAAC,MAAM;cAAAD,QAAA,EAAC;YAAyB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,eACdnG,OAAA,CAACvB,IAAI,CAAC2H,IAAI;YAAAN,QAAA,eACR9F,OAAA,CAACH,GAAG;cAAC+E,IAAI,EAAEM,eAAgB;cAAC8B,OAAO,EAAE7B;YAAa;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNnG,OAAA,CAACxB,GAAG;QAACsI,EAAE,EAAE,CAAE;QAAAhB,QAAA,eACT9F,OAAA,CAACvB,IAAI;UAAAqH,QAAA,gBACH9F,OAAA,CAACvB,IAAI,CAACsI,MAAM;YAAAjB,QAAA,eACV9F,OAAA;cAAI+F,SAAS,EAAC,MAAM;cAAAD,QAAA,EAAC;YAAkB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,eACdnG,OAAA,CAACvB,IAAI,CAAC2H,IAAI;YAAAN,QAAA,eACR9F,OAAA,CAACrB,KAAK;cAACyG,UAAU;cAAAU,QAAA,gBACf9F,OAAA;gBAAA8F,QAAA,eACE9F,OAAA;kBAAA8F,QAAA,gBACE9F,OAAA;oBAAA8F,QAAA,EAAI;kBAAQ;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACjBnG,OAAA;oBAAA8F,QAAA,EAAI;kBAAK;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACdnG,OAAA;oBAAA8F,QAAA,EAAI;kBAAK;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACdnG,OAAA;oBAAA8F,QAAA,EAAI;kBAAM;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACRnG,OAAA;gBAAA8F,QAAA,EACGxB,gBAAgB,CAACZ,GAAG,CAAC,CAACC,MAAM,EAAEsD,KAAK,kBAClCjH,OAAA;kBAAA8F,QAAA,gBACE9F,OAAA;oBAAA8F,QAAA,EAAKnC,MAAM,CAACC;kBAAI;oBAAAoC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACtBnG,OAAA;oBAAA8F,QAAA,GAAI,GAAC,EAACnC,MAAM,CAACE,KAAK,CAACgD,OAAO,CAAC,CAAC,CAAC;kBAAA;oBAAAb,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACnCnG,OAAA;oBAAA8F,QAAA,GAAI,GAAC,EAACnC,MAAM,CAACG,KAAK,CAAC+C,OAAO,CAAC,CAAC,CAAC;kBAAA;oBAAAb,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACnCnG,OAAA;oBAAA8F,QAAA,eACE9F,OAAA,CAACpB,KAAK;sBACJsI,EAAE,EACAvD,MAAM,CAACK,UAAU,GAAG,GAAG,GAAG,QAAQ,GAClCL,MAAM,CAACK,UAAU,GAAG,EAAE,GAAG,SAAS,GAAG,SACtC;sBAAA8B,QAAA,GAEAnC,MAAM,CAACK,UAAU,CAAC6C,OAAO,CAAC,CAAC,CAAC,EAAC,GAChC;oBAAA;sBAAAb,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACN,CAAC;gBAAA,GAbEc,KAAK;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAcV,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNnG,OAAA,CAACzB,GAAG;MAAAuH,QAAA,eACF9F,OAAA,CAACxB,GAAG;QAAAsH,QAAA,eACF9F,OAAA,CAACvB,IAAI;UAAAqH,QAAA,gBACH9F,OAAA,CAACvB,IAAI,CAACsI,MAAM;YAAAjB,QAAA,eACV9F,OAAA;cAAI+F,SAAS,EAAC,MAAM;cAAAD,QAAA,EAAC;YAA6B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC,eACdnG,OAAA,CAACvB,IAAI,CAAC2H,IAAI;YAAAN,QAAA,eACR9F,OAAA,CAACrB,KAAK;cAACyG,UAAU;cAAAU,QAAA,gBACf9F,OAAA;gBAAA8F,QAAA,eACE9F,OAAA;kBAAA8F,QAAA,gBACE9F,OAAA;oBAAA8F,QAAA,EAAI;kBAAI;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbnG,OAAA;oBAAA8F,QAAA,EAAI;kBAAW;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACpBnG,OAAA;oBAAA8F,QAAA,EAAI;kBAAQ;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACjBnG,OAAA;oBAAA8F,QAAA,EAAI;kBAAI;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbnG,OAAA;oBAAA8F,QAAA,EAAI;kBAAM;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACRnG,OAAA;gBAAA8F,QAAA,EACGvB,eAAe,CAACb,GAAG,CAACyD,WAAW;kBAAA,IAAAC,aAAA;kBAAA,oBAC9BpH,OAAA;oBAAA8F,QAAA,gBACE9F,OAAA;sBAAA8F,QAAA,EAAKjH,MAAM,CAAC,IAAIgC,IAAI,CAACsG,WAAW,CAACrF,IAAI,CAAC,EAAE,cAAc;oBAAC;sBAAAkE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAC7DnG,OAAA;sBAAA8F,QAAA,EAAKqB,WAAW,CAACE;oBAAW;sBAAArB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAClCnG,OAAA;sBAAA8F,QAAA,eACE9F,OAAA,CAACpB,KAAK;wBACJsI,EAAE,EAAC,WAAW;wBACdI,KAAK,EAAE;0BACLxC,eAAe,GAAAsC,aAAA,GAAE7G,OAAO,CAACgH,IAAI,CAACnD,CAAC,IAAIA,CAAC,CAACR,IAAI,KAAKuD,WAAW,CAAChE,QAAQ,CAAC,cAAAiE,aAAA,uBAAlDA,aAAA,CAAoDI;wBACvE,CAAE;wBAAA1B,QAAA,EAEDqB,WAAW,CAAChE;sBAAQ;wBAAA6C,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAChB;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACN,CAAC,eACLnG,OAAA;sBAAA8F,QAAA,eACE9F,OAAA,CAACpB,KAAK;wBAACsI,EAAE,EAAEC,WAAW,CAAC3E,IAAI,KAAK,QAAQ,GAAG,SAAS,GAAG,QAAS;wBAAAsD,QAAA,EAC7DqB,WAAW,CAAC3E;sBAAI;wBAAAwD,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACZ;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACN,CAAC,eACLnG,OAAA;sBAAI+F,SAAS,EAAEoB,WAAW,CAAC3E,IAAI,KAAK,QAAQ,GAAG,cAAc,GAAG,aAAc;sBAAAsD,QAAA,eAC5E9F,OAAA;wBAAA8F,QAAA,GACGqB,WAAW,CAAC3E,IAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG,EAAC,GAAC,EAACG,UAAU,CAACwE,WAAW,CAACvE,MAAM,CAAC,CAACiE,OAAO,CAAC,CAAC,CAAC;sBAAA;wBAAAb,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAChF;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACP,CAAC;kBAAA,GAtBEgB,WAAW,CAACM,EAAE;oBAAAzB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAuBnB,CAAC;gBAAA,CACN;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChG,EAAA,CA5WID,OAAO;EAAA,QACqB5B,WAAW,EAChBA,WAAW,EACbA,WAAW;AAAA;AAAAoJ,EAAA,GAHhCxH,OAAO;AA8Wb,eAAeA,OAAO;AAAC,IAAAwH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}